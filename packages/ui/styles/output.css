/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
	:root,
	:host {
		--font-sans:
			ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
			"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
		--font-mono:
			ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
			"Courier New", monospace;
		--color-red-50: oklch(97.1% 0.013 17.38);
		--color-red-100: oklch(93.6% 0.032 17.717);
		--color-red-200: oklch(88.5% 0.062 18.334);
		--color-red-300: oklch(80.8% 0.114 19.571);
		--color-red-400: oklch(70.4% 0.191 22.216);
		--color-red-500: oklch(63.7% 0.237 25.331);
		--color-red-600: oklch(57.7% 0.245 27.325);
		--color-white: #fff;
		--spacing: 0.25rem;
		--text-xs: 0.75rem;
		--text-xs--line-height: calc(1 / 0.75);
		--text-sm: 0.875rem;
		--text-sm--line-height: calc(1.25 / 0.875);
		--font-weight-medium: 500;
		--default-transition-duration: 150ms;
		--default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		--default-font-family: var(--font-sans);
		--default-mono-font-family: var(--font-mono);
	}
}
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
		border: 0 solid;
	}
	html,
	:host {
		line-height: 1.5;
		-webkit-text-size-adjust: 100%;
		tab-size: 4;
		font-family: var(
			--default-font-family,
			ui-sans-serif,
			system-ui,
			sans-serif,
			"Apple Color Emoji",
			"Segoe UI Emoji",
			"Segoe UI Symbol",
			"Noto Color Emoji"
		);
		font-feature-settings: var(--default-font-feature-settings, normal);
		font-variation-settings: var(--default-font-variation-settings, normal);
		-webkit-tap-highlight-color: transparent;
	}
	hr {
		height: 0;
		color: inherit;
		border-top-width: 1px;
	}
	abbr:where([title]) {
		-webkit-text-decoration: underline dotted;
		text-decoration: underline dotted;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-size: inherit;
		font-weight: inherit;
	}
	a {
		color: inherit;
		-webkit-text-decoration: inherit;
		text-decoration: inherit;
	}
	b,
	strong {
		font-weight: bolder;
	}
	code,
	kbd,
	samp,
	pre {
		font-family: var(
			--default-mono-font-family,
			ui-monospace,
			SFMono-Regular,
			Menlo,
			Monaco,
			Consolas,
			"Liberation Mono",
			"Courier New",
			monospace
		);
		font-feature-settings: var(--default-mono-font-feature-settings, normal);
		font-variation-settings: var(
			--default-mono-font-variation-settings,
			normal
		);
		font-size: 1em;
	}
	small {
		font-size: 80%;
	}
	sub,
	sup {
		font-size: 75%;
		line-height: 0;
		position: relative;
		vertical-align: baseline;
	}
	sub {
		bottom: -0.25em;
	}
	sup {
		top: -0.5em;
	}
	table {
		text-indent: 0;
		border-color: inherit;
		border-collapse: collapse;
	}
	:-moz-focusring {
		outline: auto;
	}
	progress {
		vertical-align: baseline;
	}
	summary {
		display: list-item;
	}
	ol,
	ul,
	menu {
		list-style: none;
	}
	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		display: block;
		vertical-align: middle;
	}
	img,
	video {
		max-width: 100%;
		height: auto;
	}
	button,
	input,
	select,
	optgroup,
	textarea,
	::file-selector-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		border-radius: 0;
		background-color: transparent;
		opacity: 1;
	}
	:where(select:is([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:is([multiple], [size])) optgroup option {
		padding-inline-start: 20px;
	}
	::file-selector-button {
		margin-inline-end: 4px;
	}
	::placeholder {
		opacity: 1;
	}
	@supports (not (-webkit-appearance: -apple-pay-button)) or
		(contain-intrinsic-size: 1px) {
		::placeholder {
			color: currentcolor;
			@supports (color: color-mix(in lab, red, red)) {
				color: color-mix(in oklab, currentcolor 50%, transparent);
			}
		}
	}
	textarea {
		resize: vertical;
	}
	::-webkit-search-decoration {
		-webkit-appearance: none;
	}
	::-webkit-date-and-time-value {
		min-height: 1lh;
		text-align: inherit;
	}
	::-webkit-datetime-edit {
		display: inline-flex;
	}
	::-webkit-datetime-edit-fields-wrapper {
		padding: 0;
	}
	::-webkit-datetime-edit,
	::-webkit-datetime-edit-year-field,
	::-webkit-datetime-edit-month-field,
	::-webkit-datetime-edit-day-field,
	::-webkit-datetime-edit-hour-field,
	::-webkit-datetime-edit-minute-field,
	::-webkit-datetime-edit-second-field,
	::-webkit-datetime-edit-millisecond-field,
	::-webkit-datetime-edit-meridiem-field {
		padding-block: 0;
	}
	:-moz-ui-invalid {
		box-shadow: none;
	}
	button,
	input:where([type="button"], [type="reset"], [type="submit"]),
	::file-selector-button {
		appearance: button;
	}
	::-webkit-inner-spin-button,
	::-webkit-outer-spin-button {
		height: auto;
	}
	[hidden]:where(:not([hidden="until-found"])) {
		display: none !important;
	}
}
@layer utilities {
	.relative {
		position: relative;
	}
	.my-0\.5 {
		margin-block: calc(var(--spacing) * 0.5);
	}
	.block {
		display: block;
	}
	.flex {
		display: flex;
	}
	.h-3 {
		height: calc(var(--spacing) * 3);
	}
	.h-3\.5 {
		height: calc(var(--spacing) * 3.5);
	}
	.h-4 {
		height: calc(var(--spacing) * 4);
	}
	.w-3 {
		width: calc(var(--spacing) * 3);
	}
	.w-3\.5 {
		width: calc(var(--spacing) * 3.5);
	}
	.w-4 {
		width: calc(var(--spacing) * 4);
	}
	.shrink-0 {
		flex-shrink: 0;
	}
	.cursor-not-allowed {
		cursor: not-allowed;
	}
	.items-center {
		align-items: center;
	}
	.justify-center {
		justify-content: center;
	}
	.gap-1\.5 {
		gap: calc(var(--spacing) * 1.5);
	}
	.overflow-hidden {
		overflow: hidden;
	}
	.rounded {
		border-radius: 0.25rem;
	}
	.border {
		border-style: var(--tw-border-style);
		border-width: 1px;
	}
	.border-red-200 {
		border-color: var(--color-red-200);
	}
	.border-red-300\! {
		border-color: var(--color-red-300) !important;
	}
	.border-red-500 {
		border-color: var(--color-red-500);
	}
	.bg-red-50 {
		background-color: var(--color-red-50);
	}
	.bg-red-300\! {
		background-color: var(--color-red-300) !important;
	}
	.bg-red-500 {
		background-color: var(--color-red-500);
	}
	.bg-transparent {
		background-color: transparent;
	}
	.px-3 {
		padding-inline: calc(var(--spacing) * 3);
	}
	.px-4 {
		padding-inline: calc(var(--spacing) * 4);
	}
	.px-5 {
		padding-inline: calc(var(--spacing) * 5);
	}
	.py-1\.5 {
		padding-block: calc(var(--spacing) * 1.5);
	}
	.py-2 {
		padding-block: calc(var(--spacing) * 2);
	}
	.py-3\.5 {
		padding-block: calc(var(--spacing) * 3.5);
	}
	.text-sm {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.text-xs {
		font-size: var(--text-xs);
		line-height: var(--tw-leading, var(--text-xs--line-height));
	}
	.font-medium {
		--tw-font-weight: var(--font-weight-medium);
		font-weight: var(--font-weight-medium);
	}
	.whitespace-nowrap {
		white-space: nowrap;
	}
	.text-red-300\! {
		color: var(--color-red-300) !important;
	}
	.text-red-500 {
		color: var(--color-red-500);
	}
	.text-white {
		color: var(--color-white);
	}
	.transition-all {
		transition-property: all;
		transition-timing-function: var(
			--tw-ease,
			var(--default-transition-timing-function)
		);
		transition-duration: var(--tw-duration, var(--default-transition-duration));
	}
	.hover\:border-red-300 {
		&:hover {
			@media (hover: hover) {
				border-color: var(--color-red-300);
			}
		}
	}
	.hover\:border-red-400 {
		&:hover {
			@media (hover: hover) {
				border-color: var(--color-red-400);
			}
		}
	}
	.hover\:bg-red-50 {
		&:hover {
			@media (hover: hover) {
				background-color: var(--color-red-50);
			}
		}
	}
	.hover\:bg-red-100 {
		&:hover {
			@media (hover: hover) {
				background-color: var(--color-red-100);
			}
		}
	}
	.hover\:bg-red-600 {
		&:hover {
			@media (hover: hover) {
				background-color: var(--color-red-600);
			}
		}
	}
	.hover\:text-red-400 {
		&:hover {
			@media (hover: hover) {
				color: var(--color-red-400);
			}
		}
	}
	.hover\:text-red-600 {
		&:hover {
			@media (hover: hover) {
				color: var(--color-red-600);
			}
		}
	}
	.focus\:border-red-400 {
		&:focus {
			border-color: var(--color-red-400);
		}
	}
	.focus\:bg-red-100 {
		&:focus {
			background-color: var(--color-red-100);
		}
	}
	.focus\:bg-red-600 {
		&:focus {
			background-color: var(--color-red-600);
		}
	}
	.focus\:text-red-200 {
		&:focus {
			color: var(--color-red-200);
		}
	}
	.focus\:text-red-400 {
		&:focus {
			color: var(--color-red-400);
		}
	}
	.focus\:text-red-500 {
		&:focus {
			color: var(--color-red-500);
		}
	}
}
@property --tw-border-style {
	syntax: "*";
	inherits: false;
	initial-value: solid;
}
@property --tw-font-weight {
	syntax: "*";
	inherits: false;
}
@layer properties {
	@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or
		((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
		*,
		::before,
		::after,
		::backdrop {
			--tw-border-style: solid;
			--tw-font-weight: initial;
		}
	}
}
